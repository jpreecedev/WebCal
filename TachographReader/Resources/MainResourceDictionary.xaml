<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:behav="clr-namespace:TachographReader.Behaviours"
                    xmlns:ctrls="clr-namespace:TachographReader.Controls"
                    xmlns:conv="clr-namespace:TachographReader.Converters"
                    xmlns:core="clr-namespace:TachographReader.Core"
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    xmlns:dow="clr-namespace:TachographReader.Controls.DayOfWeekPicker"
                    xmlns:Properties="clr-namespace:TachographReader.Properties">

    <LinearGradientBrush x:Key="LightBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF"
                              Offset="0.0" />
                <GradientStop Color="#EEE"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style TargetType="{x:Type Button}"
           x:Key="LargeButton">
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Content"
                Value="{x:Static Properties:Resources.TXT_EMPTY_FIELDS}" />
        <Setter Property="MinWidth"
                Value="130" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Padding"
                Value="10,3,10,3" />
    </Style>

    <Style TargetType="{x:Type Button}"
           x:Key="NewCustomerButton">
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Content"
                Value="{x:Static Properties:Resources.TXT_NEW_CUSTOMER}" />
        <Setter Property="MinWidth"
                Value="130" />
        <Setter Property="Margin"
                Value="0,-5,0,0" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Padding"
                Value="10,3,10,3" />
    </Style>

    <Style TargetType="{x:Type Grid}"
           x:Key="MainGrid">
        <Setter Property="Background"
                Value="White" />
    </Style>

    <Style TargetType="{x:Type Grid}"
           x:Key="InnerGrid">
        <Setter Property="Margin"
                Value="10,0,10,0" />
    </Style>

    <LinearGradientBrush x:Key="NormalBorderBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#CCC"
                              Offset="0.0" />
                <GradientStop Color="#444"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style TargetType="{x:Type Button}">
        <Setter Property="MinWidth"
                Value="75" />
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Margin"
                Value="5,10,5,10" />
        <Setter Property="Padding"
                Value="10,3,10,3" />
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="SelectionMode"
                Value="Single" />
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Foreground"
                Value="Black" />
    </Style>

    <Style x:Key="FadeTransitionEffect"
           TargetType="{x:Type Border}">
        <Style.Triggers>
            <Trigger Property="Visibility"
                     Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0.0"
                                             To="1.0"
                                             Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>

    <BooleanToVisibilityConverter x:Key="Bool2Vis" />
    <conv:BooleanToVisibilityWithHiddenConverter x:Key="Bool2Hidden" />
    <conv:BooleanToYesNoConverter x:Key="Bool2YesNo" />
    <conv:InverseBooleanConverter x:Key="InvBool" />
    <conv:InverseVisibilityConverter x:Key="InvVis" />
    <conv:ImageToBitmapSourceConverter x:Key="ImgToBitmapSource" />
    <conv:NullToBooleanConverter x:Key="Null2Bool" />
    <conv:DateTimeToVisibilityConverter x:Key="DateTime2Vis" />
    <conv:StringToVisibilityConverter x:Key="String2Vis" />
    <conv:InverseNullToVisibilityConverter x:Key="InvNull2Vis" />
    <conv:IntToVisibilityConverter x:Key="Int2Vis" />
    <conv:DocTypeToVisibilityConverter x:Key="DocType2Vis" />
    <conv:InverseBooleanToVisibilityConverter x:Key="InvBool2Vis" />
    <conv:NullToVisibilityConverter x:Key="Null2Vis" />
    <conv:BooleanMultiConverter x:Key="BoolMultiConverter" />
    <conv:ReadOnlyMultiConverter x:Key="ReadOnlyMultiConverter" />

    <Style x:Key="TitleFont"
           TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize"
                Value="16pt" />
        <Setter Property="Margin"
                Value="10" />
    </Style>

    <Style x:Key="SubHeaderFont"
           TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize"
                Value="10pt" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="Margin"
                Value="0,10,0,0" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
    </Style>

    <Style x:Key="SettingsTitleFont"
           TargetType="{x:Type TextBlock}">
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="FontSize"
                Value="10pt" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize"
                Value="9pt" />
        <Setter Property="FontWeight"
                Value="Normal" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Height"
                Value="25" />
        <Setter Property="Margin"
                Value="0,0,0,5" />
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="behav:TreeViewItemSelectedBehaviour.Command"
                Value="{Binding DataContext.ItemClickedCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
    </Style>

    <SolidColorBrush x:Key="RedTranslucent"
                     Color="Red"
                     Opacity="0.3" />

    <SolidColorBrush x:Key="GreenTranslucent"
                     Color="Green"
                     Opacity="0.3" />

    <Style x:Key="{x:Type ctrls:GV212Button}"
           TargetType="{x:Type ctrls:GV212Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:GV212Button}">
                    <Button x:Name="Button"
                            Height="116"
                            Width="140"
                            Padding="0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Top"
                            Margin="0,0,0,0"
                            Command="{Binding ClickCommand, RelativeSource={RelativeSource TemplatedParent}}">
                        <StackPanel>
                            <Image x:Name="Image" 
                                   Source="{core:LocalizedImageBinding ConverterParameter={}DSA_Logo}"
                                   Margin="10,10,10,10"
                                   Width="80"
                                   Height="66" />
                            <TextBlock x:Name="TextBlock"
                                       TextAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="5,5,5,15"
                                       FontSize="10pt" />
                        </StackPanel>
                    </Button>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSmallSize"
                                 Value="True">
                            <Setter Property="Height"
                                    Value="99"
                                    TargetName="Button" />
                            <Setter Property="Width"
                                    Value="120"
                                    TargetName="Button" />
                            <Setter Property="Width"
                                    Value="40"
                                    TargetName="Image" />
                            <Setter Property="Height"
                                    Value="33"
                                    TargetName="Image" />
                        </Trigger>
                        <Trigger Property="IsOutOfDate"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{StaticResource RedTranslucent}"
                                    TargetName="Button" />
                            <Setter Property="Text"
                                    Value="GV 212 Out To Date"
                                    TargetName="TextBlock" />
                        </Trigger>
                        <Trigger Property="IsOutOfDate"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{StaticResource GreenTranslucent}"
                                    TargetName="Button" />
                            <Setter Property="Text"
                                    Value="GV 212 Up To Date"
                                    TargetName="TextBlock" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ctrls:BusyIndicator}"
           TargetType="{x:Type ctrls:BusyIndicator}">
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:BusyIndicator}">
                    <Border x:Name="mainBorder"
                            Background="#FFFFFFFF"
                            CornerRadius="3">
                        <Grid>
                            <Border x:Name="shaddowBorder"
                                    Background="#FFFFFFFF"
                                    CornerRadius="3"
                                    BorderBrush="#0D566B"
                                    BorderThickness="1">
                                <Border.Effect>
                                    <DropShadowEffect  BlurRadius="2"
                                                       ShadowDepth="3"
                                                       Opacity="0.6"
                                                       Color="#FF000000"
                                                       Direction="310" />
                                </Border.Effect>
                            </Border>
                            <StackPanel HorizontalAlignment="Center"
                                        VerticalAlignment="Center">
                                <Viewbox Height="24"
                                         Width="24"
                                         Margin="2">
                                    <ctrls:ImageStrip Image="{core:LocalizedImageBinding ConverterParameter={}BusyIndicator}"
                                                      FrameSize="20"
                                                      Width="20"
                                                      Height="20"
                                                      Margin="0 3 0 0">
                                        <ctrls:ImageStrip.Effect>
                                            <DropShadowEffect BlurRadius="3"
                                                              ShadowDepth="3"
                                                              Opacity="0.6"
                                                              Color="#FF000000"
                                                              Direction="300" />
                                        </ctrls:ImageStrip.Effect>
                                        <FrameworkElement.Triggers>
                                            <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <Int32Animation From="0"
                                                                        To="17"
                                                                        Duration="0:0:0.75"
                                                                        Storyboard.TargetProperty="Frame"
                                                                        RepeatBehavior="Forever" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger>
                                        </FrameworkElement.Triggers>
                                    </ctrls:ImageStrip>
                                </Viewbox>
                                <Label x:Name="label"
                                       FontFamily="Calibri"
                                       Content="{TemplateBinding Text}"
                                       FontSize="12"
                                       FontWeight="Bold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                            </StackPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Text"
                                 Value="{x:Null}">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="label" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="shaddowBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ContentStyle1"
           TargetType="{x:Type ContentControl}">
        <Style.Setters>
            <Setter Property="Margin"
                    Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border BorderBrush="Black"
                                BorderThickness="1">
                            <Grid>
                                <Rectangle Fill="#f0f0f0">
                                    <Rectangle.BitmapEffect>
                                        <DropShadowBitmapEffect Color="Black"
                                                                Direction="270"
                                                                ShadowDepth="7"
                                                                Softness="0.8"
                                                                Opacity="0.5" />
                                    </Rectangle.BitmapEffect>
                                </Rectangle>
                                <ContentPresenter />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="ContentStyle2"
           TargetType="{x:Type ContentControl}">
        <Style.Setters>
            <Setter Property="Height"
                    Value="300" />
            <Setter Property="Margin"
                    Value="10,-130,10,10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border BorderBrush="Black"
                                BorderThickness="1">
                            <Grid>
                                <Rectangle Fill="#f0f0f0">
                                    <Rectangle.BitmapEffect>
                                        <DropShadowBitmapEffect Color="Black"
                                                                Direction="270"
                                                                ShadowDepth="7"
                                                                Softness="0.8"
                                                                Opacity="0.5" />
                                    </Rectangle.BitmapEffect>
                                </Rectangle>
                                <ContentPresenter Margin="15,35,15,0"
                                                  Height="400" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <SolidColorBrush x:Key="WindowBackgroundBrush"
                     Color="#FFF" />

    <SolidColorBrush x:Key="SolidBorderBrush"
                     Color="#888" />

    <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#888" />

    <SolidColorBrush x:Key="DisabledBackgroundBrush"
                     Color="#EEE" />

    <Style TargetType="{x:Type ctrls:InputYesNoNotApplicableField}">
        <Setter Property="Margin"
                Value="0,5,0,10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:InputYesNoNotApplicableField}">
                    <StackPanel Orientation="Vertical">
                        <Border Height="35"
                                Margin="0,0,0,5">
                            <TextBlock Text="{TemplateBinding Label}"
                                       Focusable="False"
                                       VerticalAlignment="Center"
                                       TextWrapping="Wrap" />

                        </Border>

                        <Border x:Name="Border"
                                Padding="2"
                                BorderBrush="{StaticResource WindowBackgroundBrush}"
                                BorderThickness="2">
                            <StackPanel Orientation="Horizontal">
                                <ctrls:RadioButton x:Name="YesRadioButton"
                                                   Content="{x:Static Properties:Resources.TXT_YES}"
                                                   GroupName="{TemplateBinding GroupName}"
                                                   CheckedValue="1"
                                                   Margin="0,0,10,5"
                                                   Command="{Binding CheckChangedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                   IsEnabled="{Binding IsHistoryMode, Converter={StaticResource InvBool}, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ctrls:RadioButton x:Name="NoRadioButton"
                                                   Content="{x:Static Properties:Resources.TXT_NO}"
                                                   GroupName="{TemplateBinding GroupName}"
                                                   CheckedValue="2"
                                                   Margin="0,0,10,5"
                                                   Command="{Binding CheckChangedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                   IsEnabled="{Binding IsHistoryMode, Converter={StaticResource InvBool}, RelativeSource={RelativeSource TemplatedParent}}" />
                                <ctrls:RadioButton x:Name="NotApplicableRadio"
                                                   Content="{x:Static Properties:Resources.TXT_NOT_APPLICABLE}"
                                                   GroupName="{TemplateBinding GroupName}"
                                                   CheckedValue="3"
                                                   Margin="0,0,10,5"
                                                   Command="{Binding CheckChangedCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                   IsEnabled="{Binding IsHistoryMode, Converter={StaticResource InvBool}, RelativeSource={RelativeSource TemplatedParent}}" />
                            </StackPanel>
                        </Border>

                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsNotApplicableDisplayed"
                                 Value="False">
                            <Setter TargetName="NotApplicableRadio"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Valid, RelativeSource={RelativeSource Self}}"
                                     Value="False">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Red" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:Shortcut}">
        <Setter Property="Margin"
                Value="0,10,0,0" />
        <Setter Property="Foreground"
                Value="Blue" />
        <Setter Property="FontStyle"
                Value="Italic" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:Shortcut}">

                    <TextBlock Margin="{TemplateBinding Margin}"
                               Foreground="{TemplateBinding Foreground}">
                        <Hyperlink Command="{TemplateBinding Command}"
                                   CommandParameter="{TemplateBinding CommandParameter}"
                                   FontStyle="{TemplateBinding FontStyle}">
                            <TextBlock Text="{TemplateBinding Text}" />
                        </Hyperlink>
                    </TextBlock>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:InputDatePickerField}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:InputDatePickerField}">

                    <Grid Margin="0,0,0,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="LabelColumn"
                                              Width="145" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Border Height="35">
                            <TextBlock Text="{TemplateBinding Label}"
                                       Focusable="False"
                                       VerticalAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="0,0,5,0" />
                        </Border>

                        <Border x:Name="Border"
                                Grid.Column="1">
                            <DatePicker x:Name="Picker"
                                        SelectedDate="{core:InputBinding SelectedDate, RelativeSource={RelativeSource TemplatedParent}}"
                                        Width="200"
                                        HorizontalAlignment="Left"
                                        IsEnabled="{Binding IsHistoryMode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InvBool}}" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsLabelWidthCustom"
                                 Value="True">
                            <Setter TargetName="LabelColumn"
                                    Property="Width"
                                    Value="{Binding LabelWidth, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter TargetName="Picker"
                                    Property="Width"
                                    Value="310" />
                        </Trigger>
                        <Trigger Property="IsAutoPopulated"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Black" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="LightGreen" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Valid, RelativeSource={RelativeSource Self}}"
                                     Value="False">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Red" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Picker"
                                    Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ctrls:InputComboField}"
           TargetType="{x:Type ctrls:InputComboField}">
        <Setter Property="Height"
                Value="45" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:InputComboField}">
                    <Grid Margin="0,0,0,5"
                          Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="LabelColumn"
                                              Width="145" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border Height="45">
                            <TextBlock Text="{TemplateBinding Label}"
                                       Focusable="False"
                                       VerticalAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="0,0,5,0" />
                        </Border>

                        <Border x:Name="Border"
                                Grid.Column="1"
                                Height="25"
                                VerticalAlignment="Center">
                            <ComboBox x:Name="Combo"
                                      ItemsSource="{TemplateBinding ItemsSource}"
                                      Text="{core:InputBinding SelectedText, RelativeSource={RelativeSource TemplatedParent}}"
                                      SelectedItem="{core:InputBinding SelectedItem, RelativeSource={RelativeSource TemplatedParent}}"
                                      IsSynchronizedWithCurrentItem="{TemplateBinding IsSynchronisedWithCurrentItem}"
                                      DisplayMemberPath="{TemplateBinding DisplayMemberPath}"
                                      IsEditable="{TemplateBinding IsEditable}"
                                      IsTextSearchEnabled="{TemplateBinding IsTextSearchEnabled}"
                                      Background="Transparent"
                                      VerticalAlignment="Center"
                                      Height="25" />
                        </Border>

                        <ctrls:BusyIndicator  x:Name="BusyAnimation"
                                              Grid.Column="2"
                                              Visibility="Collapsed"
                                              Height="27"
                                              Margin="5,-4,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsLabelCustomWidth"
                                 Value="True">
                            <Setter TargetName="LabelColumn"
                                    Property="Width"
                                    Value="{Binding LabelWidth, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsAutoPopulated"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Black" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="LightGreen" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Valid, RelativeSource={RelativeSource Self}}"
                                     Value="False">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Red" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsLoading"
                                 Value="True">
                            <Setter TargetName="BusyAnimation"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type ctrls:InputMultiSelectComboField}"
           TargetType="{x:Type ctrls:InputMultiSelectComboField}">
        <Setter Property="Height"
                Value="45" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:InputMultiSelectComboField}">
                    <Grid Margin="0,0,0,5"
                          Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="145" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border Height="45">
                            <TextBlock Text="{TemplateBinding Label}"
                                       Focusable="False"
                                       VerticalAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="0,0,5,0" />
                        </Border>

                        <Border x:Name="Border"
                                Grid.Column="1"
                                Height="25"
                                VerticalAlignment="Center">
                            <xctk:CheckComboBox x:Name="Combo"
                                                ItemsSource="{TemplateBinding ItemsSource}"
                                                SelectedItemsOverride="{core:InputBinding SelectedItems, RelativeSource={RelativeSource TemplatedParent}}"
                                                IsTextSearchEnabled="{TemplateBinding IsTextSearchEnabled}"
                                                Background="Transparent"
                                                VerticalAlignment="Center"
                                                Height="25" />
                        </Border>

                        <ctrls:BusyIndicator  x:Name="BusyAnimation"
                                              Grid.Column="2"
                                              Visibility="Collapsed"
                                              Height="27"
                                              Margin="5,-4,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsAutoPopulated"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Black" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="LightGreen" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Valid, RelativeSource={RelativeSource Self}}"
                                     Value="False">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Red" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsLoading"
                                 Value="True">
                            <Setter TargetName="BusyAnimation"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ctrls:InputTextField}"
           TargetType="{x:Type ctrls:InputTextField}">
        <Setter Property="Height"
                Value="40" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:InputTextField}">
                    <Grid Margin="0,0,0,5"
                          Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LabelColumn"
                                              Width="145" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border Height="35">
                            <TextBlock Text="{TemplateBinding Label}"
                                       Focusable="False"
                                       VerticalAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="0,0,5,0" />

                        </Border>

                        <Border x:Name="Border"
                                CornerRadius="2"
                                Padding="2"
                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="1"
                                Height="25"
                                Grid.Column="1">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="0"
                                          MinWidth="120"
                                          Height="25" />
                        </Border>

                        <Button x:Name="CommandButton"
                                Content="{TemplateBinding CommandLabel}"
                                Command="{TemplateBinding Command}"
                                Visibility="Collapsed"
                                Height="25"
                                Margin="10,0,0,0"
                                Grid.Column="2" />

                        <ctrls:BusyIndicator  x:Name="BusyAnimation"
                                              Grid.Column="3"
                                              Visibility="Collapsed"
                                              Height="27"
                                              Margin="5,-4,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsLabelAutoWidth"
                                 Value="true">
                            <Setter TargetName="LabelColumn"
                                    Property="Width"
                                    Value="Auto" />
                        </Trigger>
                        <Trigger Property="IsLabelCustomWidth"
                                 Value="True">
                            <Setter TargetName="LabelColumn"
                                    Property="Width"
                                    Value="{Binding LabelWidth, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>
                        <Trigger Property="IsMultiline"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="Height"
                                    Value="60" />
                            <Setter TargetName="PART_ContentHost"
                                    Property="Height"
                                    Value="55" />
                            <Setter Property="Height"
                                    Value="70" />
                            <Setter Property="TextWrapping"
                                    Value="Wrap" />
                            <Setter Property="VerticalScrollBarVisibility"
                                    Value="Auto" />
                            <Setter Property="AcceptsReturn"
                                    Value="True" />
                        </Trigger>
                        <Trigger Property="Label"
                                 Value="">
                            <Setter TargetName="LabelColumn"
                                    Property="Width"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsAutoPopulated"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Black" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="True">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="LightGreen" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Valid, RelativeSource={RelativeSource Self}}"
                                     Value="False">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Red" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="PART_ContentHost"
                                    Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsLoading"
                                 Value="True">
                            <Setter TargetName="BusyAnimation"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding CommandLabel, RelativeSource={RelativeSource Self}, Converter={StaticResource Null2Bool}}"
                                     Value="false">
                            <Setter TargetName="CommandButton"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ctrls:InputNumberPicker}"
           TargetType="{x:Type ctrls:InputNumberPicker}">
        <Setter Property="Height"
                Value="50" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:InputNumberPicker}">
                    <Grid Margin="0,0,0,5"
                          Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LabelColumn"
                                              Width="145" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border Height="35">
                            <TextBlock Text="{TemplateBinding Label}"
                                       Focusable="False"
                                       VerticalAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="0,0,5,10" />
                        </Border>

                        <Border x:Name="Border"
                                CornerRadius="2"
                                Padding="2"
                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="1"
                                Width="50"
                                HorizontalAlignment="Left"
                                Grid.Row="1">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Margin="0"
                                          Height="25" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Label"
                                 Value="">
                            <Setter TargetName="LabelColumn"
                                    Property="Width"
                                    Value="0" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Valid, RelativeSource={RelativeSource Self}}"
                                     Value="False">
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="Red" />
                            <Setter TargetName="Border"
                                    Property="BorderThickness"
                                    Value="2" />
                        </DataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border"
                                    Property="BorderBrush"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="PART_ContentHost"
                                    Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ctrls:InputAutoCompleteField}"
           TargetType="{x:Type ctrls:InputAutoCompleteField}">
        <Setter Property="Height"
                Value="50" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:InputAutoCompleteField}">
                    <Grid Margin="0,0,0,5"
                          Focusable="False">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="LabelColumn"
                                              Width="145" />
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Border Height="35">
                            <TextBlock Text="{TemplateBinding Label}"
                                       Focusable="False"
                                       VerticalAlignment="Center"
                                       TextWrapping="Wrap"
                                       Margin="0,0,5,10" />
                        </Border>

                        <toolkit:AutoCompleteBox x:Name="AutoCompleteBox"
                                                 ItemsSource="{TemplateBinding ItemsSource}"
                                                 ItemTemplate="{TemplateBinding ItemTemplate}"
                                                 VerticalAlignment="Center"
                                                 HorizontalAlignment="Stretch"
                                                 FilterMode="StartsWith"
                                                 MinimumPrefixLength="0"
                                                 Height="25"
                                                 Grid.Column="1" />

                        <ctrls:BusyIndicator  x:Name="BusyAnimation"
                                              Grid.Column="2"
                                              Visibility="Collapsed"
                                              Height="27"
                                              Margin="5,-4,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Label"
                                 Value="">
                            <Setter TargetName="LabelColumn"
                                    Property="Width"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="AutoCompleteBox"
                                    Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="AutoCompleteBox"
                                    Property="BorderBrush"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="AutoCompleteBox"
                                    Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="IsLoading"
                                 Value="True">
                            <Setter TargetName="BusyAnimation"
                                    Property="Visibility"
                                    Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ctrls:PopupWindow}">
        <Setter Property="Width"
                Value="350" />
        <Setter Property="Height"
                Value="105" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ctrls:PopupWindow}">
                    <ControlTemplate.Resources>
                        <core:CommandReference x:Key="OKCommand"
                                               Command="{Binding OKCommand, RelativeSource={RelativeSource TemplatedParent}}" />
                        <core:CommandReference x:Key="CancelCommand"
                                               Command="{Binding CancelCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                               CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
                    </ControlTemplate.Resources>

                    <Border Background="White"
                            Width="350">
                        <StackPanel Orientation="Vertical">

                            <TextBlock Text="{Binding Prompt.FirstPrompt, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0}:}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="0,10,0,0" />

                            <TextBox x:Name="PART_TextBox"
                                     Margin="20,5,20,0"
                                     Text="{core:InputBinding Prompt.FirstInput, RelativeSource={RelativeSource TemplatedParent}}"
                                     FocusManager.FocusedElement="{Binding ElementName=PART_TextBox}"
                                     AcceptsReturn="False"
                                     AcceptsTab="False"
                                     AllowDrop="False">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="{StaticResource OKCommand}"
                                                Key="Return" />
                                    <KeyBinding Command="{StaticResource OKCommand}"
                                                Key="Enter" />
                                    <KeyBinding Command="{StaticResource CancelCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                Key="Escape" />
                                </TextBox.InputBindings>
                            </TextBox>

                            <TextBlock Text="{Binding Prompt.SecondPrompt, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0}:}"
                                       Visibility="{Binding Prompt.HasSecondPrompt, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Bool2Vis}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="0,10,0,0" />

                            <TextBox Margin="20,5,20,0"
                                     Text="{core:InputBinding Prompt.SecondInput, RelativeSource={RelativeSource TemplatedParent}}"
                                     Visibility="{Binding Prompt.HasSecondPrompt, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Bool2Vis}}"
                                     AcceptsReturn="False"
                                     AcceptsTab="False"
                                     AllowDrop="False">
                                <TextBox.InputBindings>
                                    <KeyBinding Command="{StaticResource OKCommand}"
                                                Key="Return" />
                                    <KeyBinding Command="{StaticResource OKCommand}"
                                                Key="Enter" />
                                    <KeyBinding Command="{StaticResource CancelCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                Key="Escape" />
                                </TextBox.InputBindings>
                            </TextBox>

                            <TextBlock Text="{Binding Prompt.DatePrompt, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0}:}"
                                       Visibility="{Binding Prompt.HasDatePrompt, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Bool2Vis}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="0,10,0,0" />

                            <ctrls:InputDatePickerField Margin="20,5,20,0"
                                                        SelectedDate="{core:InputBinding Prompt.DateInput, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Visibility="{Binding Prompt.HasDatePrompt, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Bool2Vis}}"
                                                        IsLabelWidthCustom="True"
                                                        IsEnabled="True"
                                                        LabelWidth="0"
                                                        AllowDrop="False">
                                <ctrls:InputDatePickerField.InputBindings>
                                    <KeyBinding Command="{StaticResource OKCommand}"
                                                Key="Return" />
                                    <KeyBinding Command="{StaticResource OKCommand}"
                                                Key="Enter" />
                                    <KeyBinding Command="{StaticResource CancelCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                Key="Escape" />
                                </ctrls:InputDatePickerField.InputBindings>
                            </ctrls:InputDatePickerField>

                            <TextBlock Text="{Binding Prompt.SecondDatePrompt, RelativeSource={RelativeSource TemplatedParent}, StringFormat={}{0}:}"
                                       Visibility="{Binding Prompt.HasSecondDatePrompt, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Bool2Vis}}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="0,10,0,0" />

                            <ctrls:InputDatePickerField Margin="20,5,20,0"
                                                        SelectedDate="{core:InputBinding Prompt.SecondDateInput, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Visibility="{Binding Prompt.HasSecondDatePrompt, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Bool2Vis}}"
                                                        IsLabelWidthCustom="True"
                                                        IsEnabled="True"
                                                        LabelWidth="0"
                                                        AllowDrop="False">
                                <ctrls:InputDatePickerField.InputBindings>
                                    <KeyBinding Command="{StaticResource OKCommand}"
                                                Key="Return" />
                                    <KeyBinding Command="{StaticResource OKCommand}"
                                                Key="Enter" />
                                    <KeyBinding Command="{StaticResource CancelCommand}"
                                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                Key="Escape" />
                                </ctrls:InputDatePickerField.InputBindings>
                            </ctrls:InputDatePickerField>

                            <StackPanel Orientation="Horizontal"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center">
                                <Button Content="{x:Static Properties:Resources.TXT_OK}"
                                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                                        Command="{StaticResource OKCommand}"
                                        Width="Auto" />
                                <Button Content="{x:Static Properties:Resources.TXT_ADD_SIGNATURE}"
                                        Command="{Binding Prompt.AddSignatureCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                        Visibility="{Binding Prompt.AddSignatureCommand, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource Null2Vis}}"
                                        Width="Auto" />
                                <Button Content="{x:Static Properties:Resources.TXT_CANCEL}"
                                        Command="{StaticResource CancelCommand}"
                                        CommandParameter="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}"
                                        Width="Auto" />
                            </StackPanel>

                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasSecondPrompt"
                                 Value="true">
                            <Setter Property="Height"
                                    Value="155" />
                        </Trigger>
                        <Trigger Property="HasDatePrompt"
                                 Value="true">
                            <Setter Property="Height"
                                    Value="230" />
                        </Trigger>
                        <Trigger Property="HasSecondDatePrompt"
                                 Value="True">
                            <Setter Property="Height"
                                    Value="305" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="ModalWindow">

        <Border x:Name="ModalBorder"
                Width="900"
                Height="600">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ContentControl x:Name="MainContent"
                                Content="{Binding ModalView}"
                                Grid.Row="1"
                                Style="{StaticResource ContentStyle1}">

                    <ContentControl.RenderTransform>
                        <TranslateTransform Y="-30" />
                    </ContentControl.RenderTransform>
                </ContentControl>
            </Grid>
        </Border>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsSmallModal}"
                         Value="true">
                <Setter TargetName="MainContent"
                        Property="Style"
                        Value="{StaticResource ContentStyle2}" />
                <Setter TargetName="MainContent"
                        Property="Height"
                        Value="400" />
                <Setter TargetName="MainContent"
                        Property="Width"
                        Value="550" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsMediumModal}"
                         Value="true">
                <Setter TargetName="MainContent"
                        Property="Height"
                        Value="425" />
                <Setter TargetName="MainContent"
                        Property="Width"
                        Value="600" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsLargeModal}"
                         Value="true">
                <Setter TargetName="MainContent"
                        Property="Height"
                        Value="475" />
                <Setter TargetName="MainContent"
                        Property="Width"
                        Value="750" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>


    <Style x:Key="{x:Type xctk:IntegerUpDown}"
           TargetType="{x:Type xctk:IntegerUpDown}">
        <Setter Property="Width"
                Value="50" />
        <Setter Property="Height"
                Value="20" />
        <Setter Property="Increment"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="Black" />
        <Setter Property="MouseWheelActiveOnFocus"
                Value="True" />
        <Setter Property="Value"
                Value="80" />
        <Setter Property="Background"
                Value="{StaticResource WindowBackgroundBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource SolidBorderBrush}" />
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="FontSize"
                Value="9pt" />
        <Setter Property="FontWeight"
                Value="Normal" />
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="Margin"
                Value="0,5,0,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0"
                                Background="{StaticResource LightBrush}"
                                BorderBrush="{StaticResource NormalBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="2,2,0,0">
                            <ContentPresenter Margin="4"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True" />
                        </Border>
                        <Border Grid.Row="1"
                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="1,0,1,1"
                                CornerRadius="0,0,2,2">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type dow:DayOfWeekPicker}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dow:DayOfWeekPicker}">

                    <ItemsControl ItemsSource="{TemplateBinding DaysOfWeek}"
                                  Margin="10">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <CheckBox Margin="0,0,10,0"
                                          Content="{core:InputBinding DayOfWeek}"
                                          IsChecked="{core:InputBinding IsChecked}" />
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel IsItemsHost="True"
                                            Orientation="Horizontal" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                    </ItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>